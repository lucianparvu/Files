<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:viewModels="clr-namespace:DefaultMauiApp.ViewModels"
             xmlns:model="clr-namespace:DefaultMauiApp.Models.Entities"
             x:DataType="viewModels:ProductCategoryDetailViewModel"        
             x:Class="DefaultMauiApp.Views.ProductCategoryDetailPage"              
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:templates="clr-namespace:DefaultMauiApp.Views.Templates"            
             xmlns:localization="clr-namespace:DefaultMauiApp.Resources.Strings"
             xmlns:helpers="clr-namespace:DefaultMauiApp.Helpers"              
             Shell.PresentationMode="NotAnimated"          
             Style="{StaticResource GrayBg}">
    <Shell.TitleView>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="45"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" LineBreakMode="TailTruncation" Text="{Binding CurrentProductCategory.Title}" Style="{StaticResource HeaderTitle}" VerticalOptions="Center"  HorizontalOptions="Start" />
            <Border Grid.Column="1"  WidthRequest="42" BackgroundColor="Transparent">
                <Button  ImageSource="{AppThemeBinding Light=iconsearch, Dark=iconsearch_w}" Padding="0" BackgroundColor="Transparent"  WidthRequest="{StaticResource buttonIconSizes}"    />
            </Border>
        </Grid>
    </Shell.TitleView>
    <Shell.BackButtonBehavior>
        <BackButtonBehavior Command="{Binding BackCommand}"     IsEnabled="True" IsVisible="True"  >
        </BackButtonBehavior>
    </Shell.BackButtonBehavior>
    <RefreshView Command="{Binding RefreshCommand}" IsRefreshing="{Binding IsRefreshing}">
        <Grid>
            <CollectionView  ItemsSource="{Binding ProductList}"                            
                            SelectionMode="None"                            
                            RemainingItemsThreshold="{Binding RemainingItemsThreshold}"
                            RemainingItemsThresholdReachedCommand="{Binding LoadMoreProductsCommand}"       
                            x:Name="CollectionViewGeneral"  
                          >
                <CollectionView.Header>
                    <VerticalStackLayout  Padding="0, 0" >
                        <VerticalStackLayout IsVisible="{Binding HasProductCategoryItems}" >
                            <CollectionView ItemsSource="{Binding ProductCategoryList}"  
                                       HeightRequest="{OnIdiom Phone=110, Tablet=135, Desktop=200}" 
                                        SelectionMode="Single"
                                        SelectedItem="{Binding ProductCategorySelectedItem}"
                                        SelectionChangedCommand="{Binding ProductCategorySelectionChangedCommand}"
                                        SelectionChangedCommandParameter="{Binding .}"
                                        Margin="0 ,10" >
                                <CollectionView.ItemsLayout>
                                    <LinearItemsLayout ItemSpacing="6" Orientation="Horizontal" />
                                </CollectionView.ItemsLayout>
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="model:ProductCategory">
                                        <Border Padding="2,2" Style="{StaticResource RoundedGrayBorder}" Margin="0,0"  >
                                            <Border.StrokeShape>
                                                <RoundRectangle CornerRadius="10"/>
                                            </Border.StrokeShape>
                                            <Grid Padding="3" HorizontalOptions="Start">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{OnIdiom Phone=75, Tablet=105, Desktop=110}" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="{OnIdiom Phone=65, Tablet=85, Desktop=100}" />
                                                    <RowDefinition Height="{OnIdiom Phone=35, Tablet=35, Desktop=55}" />
                                                </Grid.RowDefinitions>
                                                <Border Grid.Row="0" Grid.Column="0" WidthRequest="70" HeightRequest="65"  Stroke="{AppThemeBinding Light=White, Dark=White}"  StrokeThickness="1" StrokeShape="RoundRectangle 5" >
                                                    <Image  Source="{Binding ThumbnailHostPathPublic}" Aspect="AspectFill"
                                                VerticalOptions="Fill" HorizontalOptions="Fill" />
                                                </Border>
                                                <Label Grid.Row="1"    Grid.Column="0"
                                                Text="{Binding Title}"                                   
                                                FontAttributes="Bold" FontSize="11" VerticalOptions="Center" HorizontalOptions="Center" Margin="0" Padding="2,2" LineBreakMode="WordWrap"  MaxLines="2"  />
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                        </VerticalStackLayout>
                        <VerticalStackLayout IsVisible="{Binding HasItems}" >
                            <Grid  Padding="0,10" ColumnSpacing="10"  HeightRequest="60"  >
                                <Border Grid.Column="0" Style="{StaticResource filterOutline}" HorizontalOptions="Start" WidthRequest="100">
                                    <Grid Style="{StaticResource filterInner}">
                                        <Image Grid.Column="0" Source="{AppThemeBinding Light=filtericon, Dark=filtericon_w}" ></Image>
                                        <Button Grid.Column="1" HorizontalOptions="Start" Text="{Binding FiltersText}" Style="{StaticResource BtnText}"  />

                                    </Grid>
                                    <Border.GestureRecognizers>
                                        <TapGestureRecognizer   ></TapGestureRecognizer>
                                    </Border.GestureRecognizers>
                                </Border>
                                <Border Grid.Column="1" Style="{StaticResource filterOutline}" HorizontalOptions="End" WidthRequest="100">
                                    <Grid Style="{StaticResource filterInner}">
                                        <Image Grid.Column="0"  Source="{AppThemeBinding Light=sorticon, Dark=sorticon_w}"></Image>
                                        <Button Grid.Column="1" HorizontalOptions="Start" x:Name="SortButton" Text="{x:Static localization:AppResource.Sort}" Style="{StaticResource BtnText}"      />
                                    </Grid>

                                   
                                </Border>
                            </Grid>
                        </VerticalStackLayout>
                    </VerticalStackLayout>
                </CollectionView.Header>
                <CollectionView.ItemTemplate >
                    <DataTemplate x:DataType="model:Product" >
                        <Border Padding="5" Style="{StaticResource RoundedGrayBorder}"     
                                Margin="{OnPlatform iOS=0, Android='0,5'}"  >
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="10"/>
                            </Border.StrokeShape>
                            <StackLayout CompressedLayout.IsHeadless="True">
                                <Grid >
                                    <Border  Grid.Column="0" HorizontalOptions="Start" Margin="0,10,0,0" Style="{StaticResource DiscountLabel}" IsVisible="{Binding HasDiscount}" VerticalOptions="Start"  >
                                        <Border.StrokeShape>
                                            <RoundRectangle CornerRadius="3"/>
                                        </Border.StrokeShape>
                                        <HorizontalStackLayout  VerticalOptions="Center"  HorizontalOptions="Center">
                                            <Label Text="-" FontAttributes="Bold" TextColor="#fff" FontSize="14" HorizontalTextAlignment="Center" ></Label>
                                            <Label Text="{Binding Discount , StringFormat='{0:F0}'}" FontAttributes="Bold" HorizontalTextAlignment="Center"  FontSize="14"  TextColor="#fff"></Label>
                                            <Label Text="%" FontAttributes="Bold" TextColor="#fff" FontSize="14" HorizontalTextAlignment="Center"  ></Label>
                                        </HorizontalStackLayout>
                                    </Border>
                                    <ImageButton Grid.Column="1" Source="heartoutline"  VerticalOptions="Center" HorizontalOptions="End" Style="{StaticResource BtnFavIcon}"  
                                            HeightRequest="{StaticResource favIconSizes}" WidthRequest="{StaticResource favIconSizes}"  
                                            Margin="{OnIdiom Phone='10,0,10,0', Tablet='10,0,10,0', Desktop='10,0,10,0'}" 
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ProductCategoryDetailViewModel}}, Path=UpdateFavoriteItem}" CommandParameter="{Binding .}" >
                                        <ImageButton.Triggers>
                                            <MultiTrigger TargetType="ImageButton">
                                                <MultiTrigger.Conditions>
                                                    <BindingCondition Binding="{Binding IsInFavorites}" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Source"   Value="heart" />
                                            </MultiTrigger>
                                            <MultiTrigger TargetType="ImageButton">
                                                <MultiTrigger.Conditions>
                                                    <BindingCondition Binding="{Binding IsNotInFavorites}" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Source"  Value="heartoutline" />
                                            </MultiTrigger>
                                        </ImageButton.Triggers>
                                    </ImageButton>
                                </Grid>

                                <ImageButton Source="{Binding ThumbnailHostPathPublic,Mode=OneTime}"   VerticalOptions="Center" HorizontalOptions="Center" HeightRequest="200" WidthRequest="200"
                                         Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ProductCategoryDetailViewModel}}, Path=NavigateToProductCommand}" CommandParameter="{Binding .}" />

                                <Label  Padding="0,10"
                                       Text="{Binding Title,Mode=OneTime}" Style="{StaticResource ProductTitle}" FontSize="13"  
                                       LineBreakMode="WordWrap" MaxLines="2"  >
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer   Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ProductCategoryDetailViewModel}}, Path=NavigateToProductCommand}" CommandParameter="{Binding .}" ></TapGestureRecognizer>
                                    </Label.GestureRecognizers>
                                </Label>
                                 
                                <Grid  >
                                    <HorizontalStackLayout  Grid.Column="0" HorizontalOptions="Start" VerticalOptions="Center">
                                        <Label  IsVisible="{Binding HasDiscount,Mode=OneTime}" Text="{Binding OldPrice,Mode=OneTime}"    TextDecorations="Strikethrough"
                                                            MaxLines="1"
                                                            LineBreakMode="TailTruncation"
                                                            FontSize="13"
                                                            VerticalOptions="Center" 
                                                            HorizontalOptions="Start"  Margin="0,0" TextColor="DarkGray"   >
                                        </Label>
                                        <Label  IsVisible="{Binding HasUserPriceOld}"
                                                            MaxLines="1" Text="{Binding UserPriceOld,Mode=OneTime}"  
                                                            LineBreakMode="TailTruncation"
                                                            FontSize="13"
                                                            VerticalOptions="Center" 
                                                            HorizontalOptions="Start"  Margin="0,0" TextColor="DarkGray"  TextDecorations="Strikethrough" />

                                        <Label    Style="{StaticResource ProductPrice}" Text="{Binding Price,Mode=OneTime}"  Margin="2,0" />
                                        <Label Text="{Binding Source={x:Static Application.Current}, Path=PageStateModel.Currency}"
                                       Style="{StaticResource ProductPrice}"
                                           Margin="2,0" />
                                    </HorizontalStackLayout>
                                    <ImageButton Source="cartfilled"   HorizontalOptions="End"   VerticalOptions="Center"
                                            HeightRequest="{StaticResource cartIconSizes}" WidthRequest="{StaticResource cartIconSizes}"
                                            Margin="{OnIdiom Phone='10,0,10,0', Tablet='10,0,10,0', Desktop='10,0,10,0'}" 
                                            Style="{StaticResource BtnCartIcon}"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ProductCategoryDetailViewModel}}, Path=AddToCartCommand}" CommandParameter="{Binding .}"
                                            Grid.Column="1" >
                                        <ImageButton.Triggers>
                                            <MultiTrigger TargetType="ImageButton">
                                                <MultiTrigger.Conditions>
                                                    <BindingCondition Binding="{Binding IsEnabledCanAddToCart}" Value="True" />
                                                </MultiTrigger.Conditions>
                                            </MultiTrigger>
                                            <MultiTrigger TargetType="ImageButton">
                                                <MultiTrigger.Conditions>
                                                    <BindingCondition Binding="{Binding IsCanNotAddToCart}" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="BackgroundColor" Value="Gray"></Setter>
                                            </MultiTrigger>
                                        </ImageButton.Triggers>
                                    </ImageButton>
                                </Grid>
                            </StackLayout>
                            <Border.Triggers>
                                <MultiTrigger TargetType="Border">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding IsInShoppingCart}" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Stroke" Value="#3d39cb"></Setter>
                                    <Setter Property="StrokeThickness" Value=".9"></Setter>
                                </MultiTrigger>
                            </Border.Triggers>
                        </Border>
                    </DataTemplate>
                </CollectionView.ItemTemplate>

                <CollectionView.Footer>
                    <StackLayout>

                        <ActivityIndicator    IsRunning="{Binding ProductIsBusy}" 
                                           HeightRequest="40" WidthRequest="40" HorizontalOptions="Center"></ActivityIndicator>
                    </StackLayout>
                </CollectionView.Footer>
            </CollectionView>
        </Grid>
    </RefreshView>

</ContentPage>