<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:viewModels="clr-namespace:DefaultMauiApp.ViewModels"
             xmlns:model="clr-namespace:DefaultMauiApp.Models.Entities"
             x:DataType="viewModels:ProductCategoryDetailViewModel"        
             x:Class="DefaultMauiApp.Views.ProductCategoryDetailPage"              
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:templates="clr-namespace:DefaultMauiApp.Views.Templates"            
             xmlns:localization="clr-namespace:DefaultMauiApp.Resources.Strings"
             xmlns:helpers="clr-namespace:DefaultMauiApp.Helpers"              
             Shell.PresentationMode="NotAnimated"          
             Style="{StaticResource GrayBg}">  
    <Shell.TitleView>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>                  
                    <ColumnDefinition Width="45"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" LineBreakMode="TailTruncation" Text="{Binding CurrentProductCategory.Title}" Style="{StaticResource HeaderTitle}" VerticalOptions="Center"  HorizontalOptions="Start" />
            <Border Grid.Column="1"  WidthRequest="42" BackgroundColor="Transparent">
                <Button  ImageSource="{AppThemeBinding Light=iconsearch, Dark=iconsearch_w}" Padding="0" BackgroundColor="Transparent"  WidthRequest="{StaticResource buttonIconSizes}"  Command="{Binding GoToSearchPageCommand}" />
         </Border>
            </Grid>   
    </Shell.TitleView>
    <Shell.BackButtonBehavior>
        <BackButtonBehavior Command="{Binding BackCommand}"     IsEnabled="True" IsVisible="True"  >             
        </BackButtonBehavior>
    </Shell.BackButtonBehavior>
    <RefreshView Command="{Binding RefreshCommand}" IsRefreshing="{Binding IsRefreshing}">
        <Grid>
        <CollectionView  ItemsSource="{Binding ProductList}"                            
                            SelectionMode="None"                            
                            RemainingItemsThreshold="{Binding RemainingItemsThreshold}"
                            RemainingItemsThresholdReachedCommand="{Binding LoadMoreProductsCommand}"                       
                          >
            <CollectionView.Header>                    
                <VerticalStackLayout  Padding="0, 0" >
                    <CollectionView ItemsSource="{Binding ProductCategoryList}" HeightRequest="{OnIdiom Phone=110, Tablet=135, Desktop=200}" 
                        IsVisible="{Binding HasProductCategoryItems}"                         
                        SelectionMode="Single"
                        SelectedItem="{Binding ProductCategorySelectedItem}"
                        SelectionChangedCommand="{Binding ProductCategorySelectionChangedCommand}"
                        SelectionChangedCommandParameter="{Binding .}"
                        Margin="0 ,10" >
                        <CollectionView.ItemsLayout>
                            <LinearItemsLayout ItemSpacing="6" Orientation="Horizontal" />
                        </CollectionView.ItemsLayout>
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="model:ProductCategory">
                                <Border Padding="2,2" Style="{StaticResource RoundedGrayBorder}" Margin="0,0"  >
                                    <Border.StrokeShape>
                                        <RoundRectangle CornerRadius="10"/>
                                    </Border.StrokeShape>
                                    <Grid Padding="3" HorizontalOptions="Start">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{OnIdiom Phone=75, Tablet=105, Desktop=110}" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="{OnIdiom Phone=65, Tablet=85, Desktop=100}" />
                                            <RowDefinition Height="{OnIdiom Phone=35, Tablet=35, Desktop=55}" />
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Grid.Column="0" WidthRequest="70" HeightRequest="65"  Stroke="{AppThemeBinding Light=White, Dark=White}"  StrokeThickness="1" StrokeShape="RoundRectangle 5" >
                                            <Image  Source="{Binding ThumbnailHostPathPublic}" Aspect="AspectFill"
                                                VerticalOptions="Fill" HorizontalOptions="Fill" />
                                        </Border>
                                            <Label Grid.Row="1"    Grid.Column="0"
                                                Text="{Binding Title}"                                   
                                                FontAttributes="Bold" FontSize="11" VerticalOptions="Center" HorizontalOptions="Center" Margin="0" Padding="2,2" LineBreakMode="WordWrap"  MaxLines="2"  />
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>

                    <Grid  Padding="0,10" ColumnSpacing="10"  HeightRequest="60"  IsVisible="{Binding HasItems}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                                   
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Border Grid.Column="0" Style="{StaticResource filterOutline}">
                            <Grid Style="{StaticResource filterInner}">
                                    <Image Grid.Column="0" Source="{AppThemeBinding Light=filtericon, Dark=filtericon_w}" ></Image>
                                <Button Grid.Column="1" HorizontalOptions="Start" Text="{x:Static localization:AppResource.FilterProducts}" Style="{StaticResource BtnText}" Command="{Binding GoToFiltersPageCommand}"></Button>
                            </Grid>
                            
                            <Border.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding GoToFiltersPageCommand}" ></TapGestureRecognizer>
                            </Border.GestureRecognizers>
                        </Border>
                        

                        <Label Grid.Column="1" IsVisible="{Binding HasFilters}" HorizontalOptions="Center"  VerticalTextAlignment="Center">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span  Text="("  />                                           
                                    <Span  Text="{Binding FiltersCount}" />
                                    <Span  Text=" "  />
                                    <Span Text="{x:Static localization:AppResource.SelectedFilters}"/>
                                    <Span  Text=")"  />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                            
                        <ImageButton Grid.Column="2" IsVisible="{Binding HasFilters}"  Source="close.png" Command="{Binding ClearFiltersCommand}"></ImageButton>

                        <Border Grid.Column="3" Style="{StaticResource filterOutline}">
                            <Grid Style="{StaticResource filterInner}">
                                    <Image Grid.Column="0"  Source="{AppThemeBinding Light=sorticon, Dark=sorticon_w}"></Image>
                                <Button Grid.Column="1" HorizontalOptions="Start" x:Name="SortButton" Text="{x:Static localization:AppResource.Sort}" Style="{StaticResource BtnText}" Clicked="SortButton_Clicked"    />
                            </Grid>
                            
                            <Border.GestureRecognizers>
                                <TapGestureRecognizer Tapped="SortButton_Clicked" ></TapGestureRecognizer>
                            </Border.GestureRecognizers>
                        </Border>
                            
                             
                    </Grid>               
                </VerticalStackLayout>
                         
            </CollectionView.Header>
          
            <CollectionView.ItemTemplate >
                <DataTemplate x:DataType="model:Product" >
                        <Border Padding="5" Style="{StaticResource RoundedGrayBorder}"  HeightRequest="{OnIdiom Phone=130, Tablet=140, Desktop=250}"  
                                Margin="{OnPlatform iOS=0, Android='0,5'}"  VerticalOptions="Center">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="10"/>
                            </Border.StrokeShape>
                            <Grid Style="{StaticResource ProductItem}">
                                <Grid.ColumnDefinitions>                                    
                                    <ColumnDefinition Width="{OnIdiom Phone=100, Tablet=85, Desktop=150}"   />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>                                   
                                    <RowDefinition Height="{OnIdiom Phone=130, Tablet=130, Desktop=150}" />                                    
                                </Grid.RowDefinitions>


                                <Border ZIndex="1"  Margin="0,10,0,0" Style="{StaticResource DiscountLabel}" IsVisible="{Binding HasDiscount}" VerticalOptions="Start" HorizontalOptions="Start">

                                    <Border.StrokeShape>
                                        <RoundRectangle CornerRadius="3"/>
                                    </Border.StrokeShape>
                                    <Label  FontAttributes="Bold" TextColor="#fff"
                                        MaxLines="1" 
                                        LineBreakMode="TailTruncation"
                                        FontSize="14" 
                                        VerticalOptions="Center" HorizontalTextAlignment="Center"  HorizontalOptions="Center"  ZIndex="1">
                                        <Label.FormattedText >
                                            <FormattedString>
                                                <Span Text="-"/>
                                                <Span Text="{Binding Discount , StringFormat='{0:F0}'}" />
                                              
                                                <Span Text="%" />
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                </Border>

                                <Border Grid.Row="0" Grid.Column="0" HeightRequest="100"  Margin="0,5" Stroke="{AppThemeBinding Light=White, Dark=White}" VerticalOptions="CenterAndExpand"  Padding="0,5"  StrokeThickness="1" StrokeShape="RoundRectangle 5" >
                                    <ImageButton Source="{Binding ThumbnailHostPathPublic}" Margin="0, 5"
                                         Aspect="AspectFit"
                                         Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ProductCategoryDetailViewModel}}, Path=NavigateToProductCommand}" CommandParameter="{Binding .}" />
                                </Border> 
                                
                                <Grid  Grid.Row="0" Grid.Column="1" RowSpacing="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1.*" />
                                        <ColumnDefinition Width="45"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{OnIdiom Phone=55, Tablet=60, Desktop=65}" />
                                        <RowDefinition Height="{OnIdiom Phone=55, Tablet=60, Desktop=65}" />
                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="0"  Grid.Column="0" Padding="0,10"
                                       Text="{Binding Title}" Style="{StaticResource ProductTitle}" FontSize="13"  
                                       LineBreakMode="WordWrap" MaxLines="2" HorizontalOptions="Start">
                                        <Label.GestureRecognizers>
                                            <TapGestureRecognizer   Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ProductCategoryDetailViewModel}}, Path=NavigateToProductCommand}" CommandParameter="{Binding .}" ></TapGestureRecognizer>
                                        </Label.GestureRecognizers>
                                    </Label>
                                    
                                    <Border Grid.Row="0" Grid.Column="1" BackgroundColor="Transparent" Padding="{OnPlatform iOS='0,5', Android='5,10', Default='5,10'}" Margin="0,5" HorizontalOptions="CenterAndExpand" VerticalOptions="StartAndExpand">

                                        <ImageButton Aspect="Center"  Style="{StaticResource BtnFavIcon}"  
                                            HeightRequest="{StaticResource favIconSizes}" WidthRequest="{StaticResource favIconSizes}"  
                                            Margin="{OnIdiom Phone='10,0,10,0', Tablet='10,0,10,0', Desktop='10,0,10,0'}" VerticalOptions="Center"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ProductCategoryDetailViewModel}}, Path=UpdateFavoriteItem}" CommandParameter="{Binding .}" >
                                            <ImageButton.Triggers>
                                                <MultiTrigger TargetType="ImageButton">
                                                    <MultiTrigger.Conditions>
                                                        <BindingCondition Binding="{Binding IsInFavorites}" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Source"   Value="heart" />
                                                </MultiTrigger>
                                                <MultiTrigger TargetType="ImageButton">
                                                    <MultiTrigger.Conditions>
                                                        <BindingCondition Binding="{Binding IsNotInFavorites}" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Source"  Value="heartoutline" />
                                                </MultiTrigger>
                                            </ImageButton.Triggers>
                                        </ImageButton>
                                        <Border.GestureRecognizers>
                                            <TapGestureRecognizer   Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ProductCategoryDetailViewModel}}, Path=UpdateFavoriteItem}" CommandParameter="{Binding .}" ></TapGestureRecognizer>
                                        </Border.GestureRecognizers>
                                    </Border>

                                    <VerticalStackLayout Grid.Row="1"  Grid.Column="0">
                                        <!--<Label  IsVisible="{Binding HasDiscount}"
                                                    MaxLines="1" TextColor="Red"
                                                    LineBreakMode="TailTruncation"
                                                    FontSize="12"  HorizontalOptions="Start"
                                                    VerticalOptions="Center" Margin="5,0">
                                            <Label.FormattedText >
                                                <FormattedString>
                                                    <Span Text="{Binding Discount , StringFormat='{0:F0}'}" />
                                                    <Span Text=" "/>
                                                    <Span Text="%" />
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>-->
                                        <Label  IsVisible="{Binding HasDiscount}"
                                                            MaxLines="1"
                                                            LineBreakMode="TailTruncation"
                                                            FontSize="13"
                                                            VerticalOptions="Center" 
                                                            HorizontalOptions="Start"  Margin="0,0" TextColor="DarkGray"  TextDecorations="Strikethrough" >
                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <Span Text="{Binding OldPrice}"    TextDecorations="Strikethrough" />
                                                    <Span Text=" "/>
                                                    <Span Text="{Binding Source={x:Static Application.Current}, Path=PageStateModel.Currency}" />
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>
                                        <Label  IsVisible="{Binding HasUserPriceOld}"
                                                            MaxLines="1"
                                                            LineBreakMode="TailTruncation"
                                                            FontSize="13"
                                                            VerticalOptions="Center" 
                                                            HorizontalOptions="Start"  Margin="0,0" TextColor="DarkGray"  TextDecorations="Strikethrough" >
                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <Span Text="{Binding UserPriceOld}"    TextDecorations="Strikethrough"    />
                                                    <Span Text=" "/>
                                                    <Span Text="{Binding Source={x:Static Application.Current}, Path=PageStateModel.Currency}" />
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>
                                        <Label 
                                       Style="{StaticResource ProductPrice}"
                                       VerticalOptions="Center" HorizontalOptions="Start"   Margin="2,0" >
                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <Span   Text="{Binding Price}"  />
                                                    <Span  Text=" " />
                                                    <Span Text="{Binding Source={x:Static Application.Current}, Path=PageStateModel.Currency}" />
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>
                                        <helpers:SimpleRatingControl Grid.Row="2"  Amount="5"   CurrentValue="{Binding AverageRating}" AccentColor="Gold"  StarSize="20" />
                                    </VerticalStackLayout>
                                   
                                    <Border Grid.Row="1" Grid.Column="1"  BackgroundColor="Transparent"  HorizontalOptions="CenterAndExpand" VerticalOptions="EndAndExpand">
                                        <ImageButton Source="cartfilled" Aspect="Center"  
                                            HeightRequest="{StaticResource cartIconSizes}" WidthRequest="{StaticResource cartIconSizes}"
                                            Margin="{OnIdiom Phone='10,0,10,0', Tablet='10,0,10,0', Desktop='10,0,10,0'}"
                                            Style="{StaticResource BtnCartIcon}"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ProductCategoryDetailViewModel}}, Path=AddToCartCommand}" CommandParameter="{Binding .}"
                                            >
                                            <ImageButton.Triggers>
                                                <MultiTrigger TargetType="ImageButton">
                                                    <MultiTrigger.Conditions>
                                                        <BindingCondition Binding="{Binding IsEnabledCanAddToCart}" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                </MultiTrigger>
                                                <MultiTrigger TargetType="ImageButton">
                                                    <MultiTrigger.Conditions>
                                                        <BindingCondition Binding="{Binding IsCanNotAddToCart}" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BackgroundColor" Value="Gray"></Setter>
                                                </MultiTrigger>
                                            </ImageButton.Triggers>                                          
                                        </ImageButton>
                                        <Border.GestureRecognizers>
                                            <TapGestureRecognizer   Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:ProductCategoryDetailViewModel}}, Path=AddToCartCommand}" CommandParameter="{Binding .}" ></TapGestureRecognizer>
                                        </Border.GestureRecognizers>
                                    </Border>                                   
                                </Grid>                                 
                            </Grid>
                            <Border.Triggers>
                                <MultiTrigger TargetType="Border">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding IsInShoppingCart}" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Stroke" Value="#3d39cb"></Setter>
                                    <Setter Property="StrokeThickness" Value=".9"></Setter>
                                </MultiTrigger>
                            </Border.Triggers>
                        </Border>
                    </DataTemplate>
            </CollectionView.ItemTemplate>
            
                <CollectionView.Footer>
                <StackLayout>

                        <ActivityIndicator    IsRunning="{Binding ProductIsBusy}" 
                                           HeightRequest="40" WidthRequest="40" HorizontalOptions="Center"></ActivityIndicator>
                </StackLayout>
            </CollectionView.Footer>
        </CollectionView>
    </Grid>
    </RefreshView>
      
</ContentPage>
